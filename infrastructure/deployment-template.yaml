AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  BucketNamePrefixParameter:
    Type: String
    Default: audiofiles
    Description: Enter S3 bucket prefix
  TableNameParameter:
    Type: String
    Default: attendee
    Description: Enter DynamoDb table name
  FunctionNameParameter:
    Type: String
    Default: attendee
    Description: Enter Lambda function name
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName:
        Fn::Join:
        - '-'
        - - Ref: BucketNamePrefixParameter
          - Ref: AWS::Region
          - Ref: AWS::AccountId
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: SIPMediaApplicatPolicy
        Version: '2012-10-17'
        Statement:
        - Sid: SIPMediaApplicationRead
          Effect: Allow
          Principal:
            Service:
            - voiceconnector.chime.amazonaws.com
          Action:
          - s3:GetObject
          - s3:PutObject
          - s3:PutObjectAcl
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: S3Bucket
              - /*
      Bucket:
        Ref: S3Bucket
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: meetingId
        AttributeType: S
      - AttributeName: fromNumber
        AttributeType: S
      - AttributeName: callId
        AttributeType: S
      KeySchema:
      - AttributeName: fromNumber
        KeyType: HASH
      - AttributeName: callId
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: '10'
        WriteCapacityUnits: '10'
      TableName:
        Ref: TableNameParameter
      GlobalSecondaryIndexes:
      - IndexName: meetingIdIndex
        KeySchema:
        - AttributeName: meetingId
          KeyType: HASH
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: '10'
          WriteCapacityUnits: '10'
  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
       - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: DynamoDBPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:BatchGet*
            - dynamodb:DescribeStream
            - dynamodb:DescribeTable
            - dynamodb:Get*
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:BatchWrite*
            - dynamodb:CreateTable
            - dynamodb:Delete*
            - dynamodb:Update*
            - dynamodb:PutItem
            Resource:
            - Fn::Join:
              - ''
              - - arn:aws:dynamodb:*:*:table/
                - Ref: DynamoDBTable
            - Fn::Join:
              - ''
              - - arn:aws:dynamodb:*:*:table/
                - Ref: DynamoDBTable
                - /index/*
      - PolicyName: MeetingPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - chime:CreateMeeting
            - chime:DeleteMeeting
            - chime:CreateAttendee
            - chime:DeleteAttendee
            - chime:ListAttendees
            Resource: 
            - '*'
  Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Ref: FunctionNameParameter
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: ./function.zip
      Role: !GetAtt FunctionRole.Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DynamoDBTable
          BUCKET_NAME:
            Ref: S3Bucket
